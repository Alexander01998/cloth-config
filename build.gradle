buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'maven-publish'
    id 'maven'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'java-library'
    id 'net.corda.plugins.jar-filter' version "4.0.48" apply false
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

sourceCompatibility = targetCompatibility = 1.8

group = "me.shedaniel.cloth"
archivesBaseName = "cloth-config-forge"
version = project.mod_version

minecraft {
    mappings channel: 'snapshot', version: project.mcp_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft("net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}")

    compile("org.jetbrains:annotations:18.0.0")
    compile("me.shedaniel.cloth:basic-math:0.5.1")
}

task jarFilter(type: net.corda.gradle.jarfilter.JarFilterTask) {
    jars jar
    annotations {
        forRemove = [
                "org.jetbrains.annotations.NotNull",
                "org.jetbrains.annotations.Nullable",
                "org.jetbrains.annotations.ApiStatus\$Experimental",
                "org.jetbrains.annotations.ApiStatus\$Internal",
                "org.jetbrains.annotations.ApiStatus\$ScheduledForRemoval",
                "org.jetbrains.annotations.ApiStatus\$AvailableSince",
                "org.jetbrains.annotations.ApiStatus\$NonExtendable",
                "org.jetbrains.annotations.ApiStatus\$OverrideOnly"
        ]
    }
}

shadowJar {
    manifest {
        inheritFrom project.jar.manifest
    }

    dependencies {
        include(dependency("me.shedaniel.cloth:basic-math:0.5.1"))
    }

    appendix = ''
    classifier = ''
}

reobf {
    shadowJar {}
}

shadowJar.finalizedBy('reobfJar')
tasks.reobfShadowJar.mustRunAfter shadowJar
tasks.build.dependsOn reobfShadowJar

task deobfJar(type: Jar, dependsOn: 'jar') {
    from "build/source/main"
    classifier "dev"
}

artifacts {
    archives deobfJar
}

task sourceJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allJava
    classifier "sources"
}

artifacts {
    archives sourceJar
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
    from "build/docs/javadoc"
    javadoc.failOnError false
    classifier "javadoc"
}

artifacts {
    archives javadocJar
}

jar.finalizedBy('reobfJar')

task copyJarFilter(type: Copy) {
    from jarFilter
    into "${project.buildDir}/filtered-libs/"
    rename { "${project.archivesBaseName}-${project.version}.jar" }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_KEY')
    publications = ["MyPublication"]
    publish = true
    pkg {
        repo = "cloth-config-2"
        name = "cloth-config-forge"
        userOrg = "shedaniel"
        licenses = ["Apache-2.0"]
        version {
            vcsUrl = 'https://github.com/shedaniel/ClothConfig.git'
        }
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            artifact(file("${project.buildDir}/libs/${project.archivesBaseName}-${project.version}.jar")) {
                builtBy build
            }
            artifact sourceJar
            artifact javadocJar
            groupId 'me.shedaniel.cloth'
            artifactId 'cloth-config-forge'
            version = project.version
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

curseforge {
    apiKey = project.hasProperty('apiKey') ? project.property('apiKey') : System.getenv('CF_API_KEY')
    if (apiKey != null)
        project {
            id = '348521'
            releaseType = 'release'
            addGameVersion '1.16.2'
            addGameVersion '1.16.3'
            addGameVersion '1.16.4'
            addGameVersion 'Forge'
            addGameVersion 'Java 8'
            mainArtifact(file("${project.buildDir}/filtered-libs/${project.archivesBaseName}-${project.version}.jar")) {
                displayName = "[Forge ${project.supported_version}] v$project.version"
            }
            addArtifact(file("${project.buildDir}/libs/${project.archivesBaseName}-${project.version}-sources.jar"))
            afterEvaluate {
                uploadTask.dependsOn("copyJarFilter")
                uploadTask.dependsOn("sourceJar")
            }
        }
    options {
        forgeGradleIntegration = false
        javaVersionAutoDetect = false
    }
}